@{
    ViewData["Title"] = "Home Page";
}

<ul>
    <li>Click events count: <span id="clickEventsCount">0</span></li>
    <li>Test events count: <span id="textEventsCount">0</span></li>
    <li></li>
    <li></li>
</ul>

@section Scripts
{
    <script src="~/js/signalr-client-1.0.0-alpha2-final.js"></script>
    <script>
        function connect(url, counterSelector) {
            let transportType = signalR.TransportType[getParameterByName('transport')] ||
                signalR.TransportType.WebSockets;
            let logger = new signalR.ConsoleLogger(signalR.LogLevel.Information);
            let connection =
                new signalR.HubConnection(url,
                    { transport: transportType, logger: logger });

            connection.onclose(e => {
                if (e) {
                    console.log('Connection closed with error: ' + e, 'red');
                } else {
                    console.log('Disconnected', 'green');
                }
            });

            connection.on('OnEvent',
                (message) => {
                    let $counter = $(counterSelector);
                    let count = +$counter.text();
                    $counter.text(++count);
                    console.log(message);
                });

            connection.start().then(function() {
            }).catch(err => console.log(err));
        }

        connect('http://10.10.41.235:41001/EventService', "#clickEventsCount");
        connect('http://10.10.41.235:41002/EventService', "#clickEventsCount");
        connect('http://10.10.41.235:41003/EventService', "#textEventsCount");
        connect('http://10.10.41.235:41004/EventService', "#textEventsCount");

        function getParameterByName(name, url) {
            if (!url) {
                url = window.location.href;
            }
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        };
    </script>
}